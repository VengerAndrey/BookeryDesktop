<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:WPF.Common.Converters">
    <!-- Colors -->
    <Color x:Key="ColorPrimary1">White</Color>
    <Color x:Key="ColorPrimary2">LightGray</Color>
    <Color x:Key="ColorPrimary3">DarkGray</Color>
    <Color x:Key="ColorError">Red</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="BrushPrimary1" Color="{StaticResource ColorPrimary1}" />
    <SolidColorBrush x:Key="BrushPrimary2" Color="{StaticResource ColorPrimary2}" />
    <SolidColorBrush x:Key="BrushPrimary3" Color="{StaticResource ColorPrimary3}" />
    <SolidColorBrush x:Key="BrushError" Color="{StaticResource ColorError}" />

    <!-- Converters -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <converters:ValueToParameterEqualityConverter x:Key="ValueToParameterEqualityConverter" />

    <!-- Images -->
    <Image x:Key="ImageFolder" Source="../Resources/folder.png" Stretch="UniformToFill" />
    <Image x:Key="ImageUser" Source="../Resources/user.png" Stretch="UniformToFill" />

    <!-- Buttons -->
    <Style TargetType="Button">
        <Setter Property="Background" Value="{StaticResource BrushPrimary2}" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="10 5" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}" Margin="{TemplateBinding Margin}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BrushPrimary3}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Navigation Buttons -->
    <Style x:Key="StyleNavigationButton" TargetType="RadioButton">
        <Setter Property="Width" Value="40" />
        <Setter Property="Height" Value="40" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Background" Value="{StaticResource BrushPrimary2}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border Name="BorderInner" Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Padding" Value="2" />
                            <Setter Property="Background" Value="{StaticResource BrushPrimary1}"
                                    TargetName="BorderInner" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation To="{StaticResource ColorPrimary1}" Duration="0:0:0.1"
                                        Storyboard.TargetProperty="Background.Color" />
                        <ThicknessAnimation To="2" Duration="0:0:0.1" Storyboard.TargetProperty="Padding" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <ColorAnimation To="{StaticResource ColorPrimary2}" Duration="0:0:0.1"
                                        Storyboard.TargetProperty="Background.Color" />
                        <ThicknessAnimation To="4" Duration="0:0:0.1" Storyboard.TargetProperty="Padding" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- Text Boxes -->
    <Style TargetType="TextBox">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <Border BorderThickness="1" BorderBrush="{StaticResource BrushPrimary3}" CornerRadius="3">
                        <ScrollViewer x:Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Context menu -->
    <Style x:Key="StyleContextMenu" TargetType="ContextMenu">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="True" />
        <Setter Property="HasDropShadow"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border x:Name="Border"
                            Padding="2"
                            Background="{StaticResource BrushPrimary2}"
                            BorderBrush="{StaticResource BrushPrimary3}"
                            BorderThickness="2"
                            CornerRadius="5">
                        <StackPanel IsItemsHost="True"
                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="StyleContextMenuItem" TargetType="MenuItem">
        <Setter Property="Header" Value="{Binding Header}" />
        <Setter Property="Command" Value="{Binding Command, IsAsync=True}" />
        <Setter Property="CommandParameter"
                Value="{Binding Path=PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
        <Setter Property="CommandTarget"
                Value="{Binding Path=PlacementTarget ,RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" />
        <Setter Property="Icon" Value="{Binding Image}" />
        <Setter Property="Background" Value="{StaticResource BrushPrimary2}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{Binding Image}" Height="22" Margin="5 5 0 5"
                                   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <ContentPresenter Content="{TemplateBinding Header}"
                                              ContentSource="Header" Margin="5 5 10 5"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              RecognizesAccessKey="True" />
                        </StackPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource BrushPrimary3}" />
                            <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource BrushPrimary2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>